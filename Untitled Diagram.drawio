<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36" version="26.0.11">
  <diagram name="Page-1" id="hDBnATX-_rqYMnIlR0UH">
    <mxGraphModel dx="1434" dy="5414" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-20" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="zUcGBLIIrt0SRUpq_5Xp-2" target="zUcGBLIIrt0SRUpq_5Xp-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-2" value="&lt;font style=&quot;font-size: 32px;&quot;&gt;app/page.tsx&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;align=center;" parent="1" vertex="1">
          <mxGeometry x="50" y="-3640" width="390" height="320" as="geometry" />
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-6" value="- definiramo stoppages array (sve stanice iz obje dvije rute, ZG_DB, ZD-ZG) -&amp;gt; da možemo u dropdownu ponuditi sve stanice jer imamo buseve u oba smjera&lt;br&gt;- imamo formu u kojoj smo u&amp;nbsp; kojoj biramo polazište (origin), destinaciju (destination) i datum (doj=date of journey)&lt;br&gt;- origin state --&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; places&amp;lt;string&amp;gt;, origin&amp;lt;string&amp;gt;, filteredOrigins&amp;lt;string[ ]&amp;gt;, originSuggestion&amp;lt;boolean&amp;gt;&lt;br&gt;&lt;div&gt;- destination state --&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;stops&amp;lt;string&amp;gt;, destination&amp;lt;string&amp;gt;, filteredDestination&amp;lt;string[ ]&amp;gt;, destinationSuggestion&amp;lt;boolean&amp;gt;&lt;br&gt;&lt;br&gt;form &amp;gt; input&lt;br&gt;&amp;lt;input name=&quot;from&quot; value={places} onChange={handleSearchOrigin} /&amp;gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;1) handleSearchOrigin(e)&amp;nbsp;&lt;/b&gt;-&amp;gt;&amp;nbsp;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;1) setOriginSuggestion(true) -&amp;gt; boolean state koji koristimo za prikaz opcija stanica koje možemo izabrati (za prikaz dropdowna ispod input polja)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2) setPlaces(query) -&amp;gt; query je e.target.value input polja (deklarirali smo ga u funkcji red iznad) --&amp;gt; kad nešto upišemo u input polje to je query i onda sa setPlaces postavimo places za tu vrijednost.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;3) setFilteredOrigin(filteredResult);&amp;nbsp; -&amp;gt; filteredResult smo deklarirali unutar funkcije red iznad kao:&amp;nbsp;&lt;br&gt;&lt;pre&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;const filteredResult: string[] = stoppages.filter((stopp) =&amp;gt;&lt;br&gt;      &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;stopp.toLowerCase().startsWith(query.toLowerCase()),&lt;br&gt;    &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;);&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;     &lt;font face=&quot;Helvetica&quot;&gt;Kada prikazuje dropdown koji smo sa setOriginSuggestion(true) &amp;amp;&amp;amp; places(...) otvorili, koristimo filteredResult kako &lt;br&gt;          bi nam ponudio opcije koje počinju sa slovima koje smo opisali, a nalaze se unutar stoppages arraya.&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b style=&quot;font-family: Helvetica;&quot;&gt;2) getOrigin(stopp: string) &lt;/b&gt;&lt;font face=&quot;Helvetica&quot;&gt;-&amp;gt;&lt;br&gt;1) setPlaces(stopp) -&amp;gt; kada kliknemo na jednu od ponuđenih opcija postavimo places sa setPlaces kao tu opciju (jer prije ovoga je places jednako query (e.target.value),&lt;br&gt; pa bi umjesto Zadar vrijednost mogla biti Zad...&lt;br&gt;&lt;u&gt;jsx:&lt;/u&gt;&lt;br&gt;&lt;/font&gt;&lt;font data-font-src=&quot;https://fonts.googleapis.com/css?family=Monospace&quot; face=&quot;Monospace&quot;&gt;{places &amp;amp;&amp;amp; originSuggestion &amp;amp;&amp;amp; (&lt;br&gt;              &amp;lt;div className=&quot;absolute z-50 w-full overflow-hidden rounded-b-xl border-2 border-gray-500 bg-slate-300 xl:bg-white&quot;&amp;gt;&lt;br&gt;                &amp;lt;ul id=&quot;fromList&quot;&amp;gt;&lt;br&gt;                  {filteredOrigins.map((stopp, index) =&amp;gt; (&lt;br&gt;                    &amp;lt;li&lt;br&gt;                      key={index}&lt;br&gt;                      className=&quot;px-5 py-2 font-bold text-gray-700 transition-all hover:cursor-pointer hover:bg-slate-300&quot;&lt;br&gt;                      onClick={() =&amp;gt; getOrigin(stopp)}&lt;br&gt;                    &amp;gt;&lt;br&gt;                      {stopp}&lt;br&gt;                    &amp;lt;/li&amp;gt;&lt;br&gt;                ...&lt;br&gt;&lt;/font&gt;&lt;font face=&quot;Helvetica&quot;&gt;2) setOrigin -&amp;gt; ako prethodno polazište nije jednako onom kojeg smo sad izabrali promijeni u novo izabrano (stopp), ako je jednako onda vrati prethodnu vrijednost (redundant??)&lt;br&gt;&lt;/font&gt;setOrigin((prevOrigin) =&amp;gt; {&lt;br&gt;      if (prevOrigin !== stopp) {&lt;br&gt;        return stopp;&lt;br&gt;      } else {&lt;br&gt;        return prevOrigin;&lt;br&gt;      }&lt;br&gt;    });&lt;br&gt;    setOriginSuggestion(false);&lt;font face=&quot;Helvetica&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;3) &lt;font face=&quot;Helvetica&quot;&gt;setOriginSuggestion(false) --&amp;gt; &lt;/font&gt;&lt;font face=&quot;Helvetica&quot;&gt;izabrali smo novo polazište te se dropdown može zatvoriti&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;Ista dvije funckionalnosti onda idu i za destination (odredište) --&amp;gt; handleSearchDestination, getDestination&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;font face=&quot;Helvetica&quot;&gt;3) datum&lt;/font&gt;&lt;br&gt;&lt;/b&gt;const [doj, setDoj] = useState&amp;lt;string&amp;gt;(&quot;&quot;); &lt;font face=&quot;Helvetica&quot;&gt;&lt;i&gt;// zašto kao string, vidjeti je li to bolja opcija&lt;/i&gt;&lt;/font&gt;&lt;br&gt;&lt;br&gt;const today = new Date().toISOString().split(&quot;T&quot;)[0];&lt;br&gt;&lt;br&gt;&lt;u&gt;jsx:&lt;/u&gt;&lt;br&gt; &lt;font data-font-src=&quot;https://fonts.googleapis.com/css?family=Monospace&quot; face=&quot;Monospace&quot;&gt;  &amp;lt;input&lt;br&gt;            type=&quot;date&quot;&lt;br&gt;            name=&quot;doj&quot;&lt;br&gt;            min={today}&lt;br&gt;            className=&quot;font-lg h-20 w-full border-2 border-gray-500 p-[2.7rem] font-bold outline-none xl:w-fit&quot;&lt;br&gt;            autoComplete=&quot;off&quot;&lt;br&gt;            onChange={(e) =&amp;gt; setDoj(e.target.value)}&lt;br&gt;          /&amp;gt;&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;b&gt;&lt;font face=&quot;Helvetica&quot;&gt;4) searchBuses&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt; &lt;font data-font-src=&quot;https://fonts.googleapis.com/css?family=Monospace&quot; face=&quot;Monospace&quot;&gt;const searchBuses = () =&amp;gt; {&lt;br&gt;    try {&lt;br&gt;      router.push(`/BusList?from=${origin}&amp;amp;to=${destination}&amp;amp;date=${doj}`);&lt;br&gt;    } catch (error) {&lt;br&gt;      console.error(&quot;Error fetching data: &quot;, error); &lt;br&gt;    }&lt;br&gt;  };&lt;br&gt;&lt;br&gt;  const handleFormSubmit = function (e) {&lt;br&gt;    e.preventDefault();&lt;br&gt;    searchBuses();&lt;br&gt;  };&lt;br&gt;&lt;br&gt; &lt;u&gt;jsx:&lt;/u&gt;&lt;br&gt;    &amp;lt;form&lt;br&gt;          action=&quot;&quot;&lt;br&gt;          method=&quot;post&quot;&lt;br&gt;          className=&quot;flex min-w-[85%] flex-col items-stretch xl:min-w-full xl:flex-row xl:justify-center&quot;&lt;br&gt;          onSubmit={handleFormSubmit}&lt;br&gt;        &amp;gt;&lt;br&gt;...&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;spacingLeft=25;spacingRight=10;spacingTop=10;spacing=0;spacingBottom=10;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" parent="1" vertex="1">
          <mxGeometry x="520" y="-4676" width="1130" height="1596" as="geometry" />
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-10" value="" style="endArrow=none;dashed=1;html=1;rounded=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=-0.001;exitY=0.576;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="zUcGBLIIrt0SRUpq_5Xp-6" target="zUcGBLIIrt0SRUpq_5Xp-2" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="510" y="-3720" as="sourcePoint" />
            <mxPoint x="970" y="-3710" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-27" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zUcGBLIIrt0SRUpq_5Xp-18" target="zUcGBLIIrt0SRUpq_5Xp-28" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="640" y="-2710" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wEU0tcn83tqyCmN5frSI-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="zUcGBLIIrt0SRUpq_5Xp-18">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="245" y="-1557.142857142857" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-18" value="&lt;font style=&quot;font-size: 19px;&quot;&gt;app/BusList/page.tsx&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="90" y="-2780" width="310" height="140" as="geometry" />
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-23" style="edgeStyle=entityRelationEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=none;endArrow=none;segment=10;curved=1;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="zUcGBLIIrt0SRUpq_5Xp-21" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="240" y="-3060" as="targetPoint" />
            <mxPoint x="1100" y="-2970" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-21" value="&lt;br&gt;&lt;div style=&quot;color: rgb(187, 187, 187); background-color: rgb(40, 44, 52); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-weight: normal; line-height: 19px; white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(97, 175, 239);&quot;&gt;router&lt;/span&gt;&lt;span style=&quot;color: rgb(171, 178, 191);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: rgb(152, 195, 121);&quot;&gt;push&lt;/span&gt;&lt;span style=&quot;color: rgb(171, 178, 191);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;`/BusList?from=&lt;/span&gt;&lt;span style=&quot;color: rgb(198, 120, 221);&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color: rgb(171, 178, 191);&quot;&gt;origin&lt;/span&gt;&lt;span style=&quot;color: rgb(198, 120, 221);&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;&amp;amp;to=&lt;/span&gt;&lt;span style=&quot;color: rgb(198, 120, 221);&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color: rgb(171, 178, 191);&quot;&gt;destination&lt;/span&gt;&lt;span style=&quot;color: rgb(198, 120, 221);&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;&amp;amp;date=&lt;/span&gt;&lt;span style=&quot;color: rgb(198, 120, 221);&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color: rgb(171, 178, 191);&quot;&gt;doj&lt;/span&gt;&lt;span style=&quot;color: rgb(198, 120, 221);&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: rgb(229, 192, 123);&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color: rgb(171, 178, 191);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: rgb(187, 187, 187);&quot;&gt;;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br/&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;rounded=1;arcSize=50;align=center;verticalAlign=middle;strokeWidth=1;autosize=1;spacing=4;treeFolding=1;treeMoving=1;newEdgeStyle={&quot;edgeStyle&quot;:&quot;entityRelationEdgeStyle&quot;,&quot;startArrow&quot;:&quot;none&quot;,&quot;endArrow&quot;:&quot;none&quot;,&quot;segment&quot;:10,&quot;curved&quot;:1,&quot;sourcePerimeterSpacing&quot;:0,&quot;targetPerimeterSpacing&quot;:0};" parent="1" vertex="1" collapsed="1">
          <mxGeometry x="370" y="-3050" width="730" height="70" as="geometry" />
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-28" value="&lt;b&gt;1)&amp;nbsp;&amp;nbsp;http://localhost:3000/BusList?from=Zadar&amp;amp;to=Zagreb&amp;amp;date=2025-02-09 --&amp;gt;&lt;/b&gt;&lt;br&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font face=&quot;monospace&quot;&gt;export default async function BusList({&lt;/font&gt;&lt;/span&gt;&lt;div&gt;&lt;font face=&quot;monospace&quot;&gt;&amp;nbsp; searchParams,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;monospace&quot;&gt;}: {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;monospace&quot;&gt;&amp;nbsp; searchParams: Promise&amp;lt;{ [key: string]: string | string[] | undefined }&amp;gt;;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;monospace&quot;&gt;}) {&lt;/font&gt;&lt;/div&gt;&lt;font face=&quot;monospace&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; const { from: origin, to: destination, date: doj } = await searchParams;&lt;/span&gt;&amp;nbsp;&lt;/font&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;2) &lt;/b&gt;const data = await pool.query(..., [origin, destination]);&lt;br&gt;&amp;nbsp; &amp;nbsp; const buses = data.rows; &lt;i&gt;// fetch all buses from buses table where we have a stoppage array that&amp;nbsp; contain origin and destination, and index of origin in stoppages array is lower than the index of destination in stoppages array&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;3)&lt;/b&gt; const distance = await pool.query(..., [origin, destination, route_name]);&lt;br&gt;&amp;nbsp; &amp;nbsp; const total_ditance = distance.rows[0].total_distance;&lt;br&gt;&amp;nbsp; &amp;nbsp; - here we use UNNEST(distance) to spread an array in table, so we will have 8 rows for first route for example as that how many are stops in distance array inside bus_routes table&lt;br&gt;&amp;nbsp; &amp;nbsp; - here we calculate the distance from the origin and the destination&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;4)&lt;/b&gt;&amp;nbsp; const distance_origin = await pool.query(..., [origin, route_name]);&lt;br&gt;&amp;nbsp; &amp;nbsp; - const distance_from_start = distance_origin.rows[0].distance_from_start;&lt;br&gt;&amp;nbsp; &amp;nbsp; - calculate distance from the place the bus is starting trip and passenger origin stop (for example, bus starts from Zadar, but the passenger gets in Šibenik (distance between Zd and Ši).&lt;br&gt;&lt;br&gt;&lt;b&gt;5)&lt;/b&gt; buses.forEach((bus) =&amp;gt; {...}&lt;br&gt;&amp;nbsp; &amp;nbsp; - here we calculate for each bus total_fare, start_time, estimated_arrival, estimated_date, duration, origin, destination, doj&amp;nbsp; &amp;nbsp;-&amp;gt; then we add those properties to original buses array we fetched from&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; database.&lt;br&gt;&amp;nbsp; &amp;nbsp;&lt;br&gt;&lt;b&gt;6) -&amp;nbsp;&lt;/b&gt;conditionally display jsx depending if there are avaliable buses or no.&lt;br&gt;&amp;nbsp; &amp;nbsp; - pass buses array that we fetched from database and modified (added additional properties)&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp;&lt;/b&gt;&lt;font style=&quot;&quot; data-font-src=&quot;https://fonts.googleapis.com/css?family=Monospace&quot; face=&quot;Monospace&quot;&gt;&lt;b&gt;&amp;nbsp;&lt;/b&gt;&amp;lt;Buses buses={buses} /&amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;monospace&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-weight: bold;&quot; face=&quot;monospace&quot;&gt;&amp;nbsp; &lt;/font&gt;&lt;font style=&quot;&quot; face=&quot;Helvetica&quot;&gt;- also add the modifying button to go back to the homepage if users want to change something&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;align=left;spacingLeft=15;spacingTop=10;spacingRight=5;spacingBottom=5;" parent="1" vertex="1">
          <mxGeometry x="470" y="-2930" width="1180" height="540" as="geometry" />
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-30" value="&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;Problemi:&amp;nbsp;&lt;div&gt;1) forma na enter error&lt;/div&gt;&lt;div&gt;2) previše state - reducer i context api ili redux?&lt;br&gt;3) make everything camelcase&lt;br&gt;4) use try/catch for querying?&lt;/div&gt;&lt;/blockquote&gt;" style="shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="40" y="-4620" width="350" height="140" as="geometry" />
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-32" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zUcGBLIIrt0SRUpq_5Xp-31" target="zUcGBLIIrt0SRUpq_5Xp-28" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1310" y="-2360" />
              <mxPoint x="730" y="-2360" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zUcGBLIIrt0SRUpq_5Xp-31" value="&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;bus_routes: id, route_name, distance: stop[ ]&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;buses: id, bus_name, details, total_seats, stoppages: text[ ], fare, start_time, speed, service, routes&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;journey: id, bus_name, origin, destination, doj, passenger_name, seat_no, mobile_no, email, stoppages: text[ ], fare, start_time, paymeniid, payment_status&lt;/div&gt;&lt;/blockquote&gt;" style="shape=datastore;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1060" y="-2290" width="520" height="390" as="geometry" />
        </mxCell>
        <mxCell id="wEU0tcn83tqyCmN5frSI-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="wEU0tcn83tqyCmN5frSI-2" target="wEU0tcn83tqyCmN5frSI-5">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="590" y="-1490" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wEU0tcn83tqyCmN5frSI-2" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;app/BusList/Buses.tsx&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#ffe6cc;strokeColor=#d79b00;" vertex="1" parent="1">
          <mxGeometry x="70" y="-1560" width="350" height="140" as="geometry" />
        </mxCell>
        <mxCell id="wEU0tcn83tqyCmN5frSI-5" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#eeeeee;strokeColor=#36393d;" vertex="1" parent="1">
          <mxGeometry x="530" y="-1770" width="1090" height="540" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
